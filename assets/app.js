var app=angular.module("app",["ngRoute"]);angular.module("app").controller("ApplicationCtrl",["$scope",function(t){t.$on("login",function(o,n){t.currentUser=n})}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc",function(t,o){t.login=function(n,e){o.login(n,e).then(function(o){t.$emit("login",o.data)})}}]),app.controller("PostCtrl",["$scope","PostSvc",function(t,o){t.addPost=function(){t.postBody&&o.create({username:"dickeyxxx",body:t.postBody}).success(function(o){t.postBody=null})},o.fetch().success(function(o){t.posts=o}),t.$on("ws:new_post",function(o,n){t.$apply(function(){t.posts.unshift(n)})})}]),app.service("PostSvc",["$http",function(t){this.fetch=function(){return t.get("/api/posts")},this.create=function(o){return t.post("/api/posts",o)}}]),angular.module("app").config(["$routeProvider",function(t){t.when("/",{controller:"PostCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"})}]),angular.module("app").service("UserSvc",["$http",function(t){var o=this;o.getUser=function(){return t.get("/api/users")},o.login=function(n,e){return t.post("/api/sessions",{username:n,password:e}).then(function(n){return o.token=n.data,t.defaults.headers.common["X-Auth"]=n.data,o.getUser()})}}]),angular.module("app").run(["$rootScope","$timeout",function(t,o){!function n(){var e="ws://localhost:8888",r=new WebSocket(e);r.onclose=function(t){console.log("connection closed"),o(n,1e4)},r.onmessage=function(o){console.log(o);var n=JSON.parse(o.data);t.$broadcast("ws:"+n.topic,n.data)}}()}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImFwcGxpY2F0aW9uLmN0cmwuanMiLCJsb2dpbi5jdHJsLmpzIiwicG9zdHMuY3RybC5qcyIsInBvc3RzLnN2Yy5qcyIsInJvdXRlcy5qcyIsInVzZXIuc3ZjLmpzIiwid2Vic29ja2V0cy5qcyJdLCJuYW1lcyI6WyJhcHAiLCJhbmd1bGFyIiwibW9kdWxlIiwiY29udHJvbGxlciIsIiRzY29wZSIsIiRvbiIsIl8iLCJ1c2VyIiwiY3VycmVudFVzZXIiLCJVc2VyU3ZjIiwibG9naW4iLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwidGhlbiIsInJlc3BvbnNlIiwiJGVtaXQiLCJkYXRhIiwiUG9zdFN2YyIsImFkZFBvc3QiLCJwb3N0Qm9keSIsImNyZWF0ZSIsImJvZHkiLCJzdWNjZXNzIiwicG9zdCIsImZldGNoIiwicG9zdHMiLCIkYXBwbHkiLCJ1bnNoaWZ0Iiwic2VydmljZSIsIiRodHRwIiwidGhpcyIsImdldCIsImNvbmZpZyIsIiRyb3V0ZVByb3ZpZGVyIiwid2hlbiIsInRlbXBsYXRlVXJsIiwic3ZjIiwiZ2V0VXNlciIsInZhbCIsInRva2VuIiwiZGVmYXVsdHMiLCJoZWFkZXJzIiwiY29tbW9uIiwicnVuIiwiJHJvb3RTY29wZSIsIiR0aW1lb3V0IiwiY29ubmVjdCIsInVybCIsImNvbm5lY3Rpb24iLCJXZWJTb2NrZXQiLCJvbmNsb3NlIiwiZSIsImNvbnNvbGUiLCJsb2ciLCJvbm1lc3NhZ2UiLCJwYXlsb2FkIiwiSlNPTiIsInBhcnNlIiwiJGJyb2FkY2FzdCIsInRvcGljIl0sIm1hcHBpbmdzIjoiQUFBQSxHQUFBQSxLQUFBQyxRQUFBQyxPQUFBLE9BQUEsV0NBQUQsU0FBQUMsT0FBQSxPQUNBQyxXQUFBLG1CQUFBLFNBQUEsU0FBQUMsR0FDQUEsRUFBQUMsSUFBQSxRQUFBLFNBQUFDLEVBQUFDLEdBQ0FILEVBQUFJLFlBQUFELE9DSEFOLFFBQUFDLE9BQUEsT0FDQUMsV0FBQSxhQUFBLFNBQUEsVUFBQSxTQUFBQyxFQUFBSyxHQUNBTCxFQUFBTSxNQUFBLFNBQUFDLEVBQUFDLEdBQ0FILEVBQUFDLE1BQUFDLEVBQUFDLEdBQ0FDLEtBQUEsU0FBQUMsR0FDQVYsRUFBQVcsTUFBQSxRQUFBRCxFQUFBRSxZQ0xBaEIsSUFBQUcsV0FBQSxZQUFBLFNBQUEsVUFBQSxTQUFBQyxFQUFBYSxHQUVBYixFQUFBYyxRQUFBLFdBRUFkLEVBQUFlLFVBRUFGLEVBQUFHLFFBRUFULFNBQUEsWUFDQVUsS0FBQWpCLEVBQUFlLFdBQ0FHLFFBQUEsU0FBQUMsR0FFQW5CLEVBQUFlLFNBQUEsUUFLQUYsRUFBQU8sUUFBQUYsUUFBQSxTQUFBRyxHQUNBckIsRUFBQXFCLE1BQUFBLElBR0FyQixFQUFBQyxJQUFBLGNBQUEsU0FBQUMsRUFBQWlCLEdBQ0FuQixFQUFBc0IsT0FBQSxXQUNBdEIsRUFBQXFCLE1BQUFFLFFBQUFKLFVDdkJBdkIsSUFBQTRCLFFBQUEsV0FBQSxRQUFBLFNBQUFDLEdBRUFDLEtBQUFOLE1BQUEsV0FDQSxNQUFBSyxHQUFBRSxJQUFBLGVBR0FELEtBQUFWLE9BQUEsU0FBQUcsR0FDQSxNQUFBTSxHQUFBTixLQUFBLGFBQUFBLE9DUEF0QixRQUFBQyxPQUFBLE9BQ0E4QixRQUFBLGlCQUFBLFNBQUFDLEdBRUFBLEVBQ0FDLEtBQUEsS0FDQS9CLFdBQUEsV0FDQWdDLFlBQUEsZUFFQUQsS0FBQSxhQUNBL0IsV0FBQSxlQUNBZ0MsWUFBQSxrQkFFQUQsS0FBQSxVQUNBL0IsV0FBQSxZQUNBZ0MsWUFBQSxrQkNkQWxDLFFBQUFDLE9BQUEsT0FDQTBCLFFBQUEsV0FBQSxRQUFBLFNBQUFDLEdBQ0EsR0FBQU8sR0FBQU4sSUFFQU0sR0FBQUMsUUFBQSxXQUNBLE1BQUFSLEdBQUFFLElBQUEsZUFHQUssRUFBQTFCLE1BQUEsU0FBQUMsRUFBQUMsR0FDQSxNQUFBaUIsR0FBQU4sS0FBQSxpQkFDQVosU0FBQUEsRUFDQUMsU0FBQUEsSUFDQUMsS0FBQSxTQUFBeUIsR0FHQSxNQUZBRixHQUFBRyxNQUFBRCxFQUFBdEIsS0FDQWEsRUFBQVcsU0FBQUMsUUFBQUMsT0FBQSxVQUFBSixFQUFBdEIsS0FDQW9CLEVBQUFDLGdCQ2ZBcEMsUUFBQUMsT0FBQSxPQUNBeUMsS0FBQSxhQUFBLFdBQUEsU0FBQUMsRUFBQUMsSUFFQSxRQUFBQyxLQUNBLEdBQUFDLEdBQUEsc0JBQ0FDLEVBQUEsR0FBQUMsV0FBQUYsRUFDQUMsR0FBQUUsUUFBQSxTQUFBQyxHQUNBQyxRQUFBQyxJQUFBLHFCQUNBUixFQUFBQyxFQUFBLE1BR0FFLEVBQUFNLFVBQUEsU0FBQUgsR0FDQUMsUUFBQUMsSUFBQUYsRUFFQSxJQUFBSSxHQUFBQyxLQUFBQyxNQUFBTixFQUFBbkMsS0FDQTRCLEdBQUFjLFdBQUEsTUFBQUgsRUFBQUksTUFBQUosRUFBQXZDIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZSgnYXBwJywgWyAnbmdSb3V0ZScgXSk7IiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXHJcblx0LmNvbnRyb2xsZXIoJ0FwcGxpY2F0aW9uQ3RybCcsIGZ1bmN0aW9uKCRzY29wZSl7XHJcblx0XHQkc2NvcGUuJG9uKCdsb2dpbicsZnVuY3Rpb24oXywgdXNlcil7XHJcblx0XHRcdCRzY29wZS5jdXJyZW50VXNlciA9IHVzZXI7XHJcblx0XHR9KVxyXG5cdH0pIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXHJcbi5jb250cm9sbGVyKCdMb2dpbkN0cmwnLCBmdW5jdGlvbiggJHNjb3BlLCBVc2VyU3ZjKSB7XHJcblx0JHNjb3BlLmxvZ2luID0gZnVuY3Rpb24oIHVzZXJuYW1lLCBwYXNzd29yZCApIHtcclxuXHRcdFVzZXJTdmMubG9naW4oIHVzZXJuYW1lLCBwYXNzd29yZCApXHJcblx0XHQudGhlbihmdW5jdGlvbiggcmVzcG9uc2UgKSB7XHJcblx0XHRcdCRzY29wZS4kZW1pdCgnbG9naW4nLCByZXNwb25zZS5kYXRhICk7XHJcblx0XHR9KVxyXG5cdH1cclxufSkiLCJhcHAuY29udHJvbGxlcignUG9zdEN0cmwnLCBmdW5jdGlvbiggJHNjb3BlLCBQb3N0U3ZjICkge1xyXG5cclxuXHQkc2NvcGUuYWRkUG9zdCA9IGZ1bmN0aW9uKCl7XHJcblxyXG5cdFx0aWYoISRzY29wZS5wb3N0Qm9keSkgcmV0dXJuO1xyXG5cclxuXHRcdFBvc3RTdmMuY3JlYXRlKFxyXG5cdFx0e1xyXG5cdFx0XHR1c2VybmFtZTonZGlja2V5eHh4JyxcclxuXHRcdFx0Ym9keTokc2NvcGUucG9zdEJvZHlcclxuXHRcdH0pLnN1Y2Nlc3MoZnVuY3Rpb24ocG9zdCl7XHJcblx0XHRcdC8vICRzY29wZS5wb3N0cy51bnNoaWZ0KCBwb3N0ICk7XHJcblx0XHRcdCRzY29wZS5wb3N0Qm9keSA9IG51bGw7XHJcblx0XHR9KVxyXG5cclxuXHR9XHJcblxyXG5cdFBvc3RTdmMuZmV0Y2goKS5zdWNjZXNzKGZ1bmN0aW9uKCBwb3N0cyApe1xyXG5cdFx0JHNjb3BlLnBvc3RzID0gcG9zdHM7XHJcblx0fSk7XHJcblxyXG5cdCRzY29wZS4kb24oJ3dzOm5ld19wb3N0JywgZnVuY3Rpb24oXyxwb3N0KXtcclxuXHRcdCRzY29wZS4kYXBwbHkoZnVuY3Rpb24oKXtcclxuXHRcdFx0JHNjb3BlLnBvc3RzLnVuc2hpZnQocG9zdCk7XHJcblx0XHR9KVxyXG5cdH0pXHJcblxyXG59KTsiLCJhcHAuc2VydmljZSgnUG9zdFN2YycsIGZ1bmN0aW9uKCAkaHR0cCApIHtcclxuXHJcblx0dGhpcy5mZXRjaCA9IGZ1bmN0aW9uKCl7XHJcblx0XHRyZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3Bvc3RzJyk7XHJcblx0fVxyXG5cclxuXHR0aGlzLmNyZWF0ZSA9IGZ1bmN0aW9uKCBwb3N0ICl7XHJcblx0XHRyZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9wb3N0cycsIHBvc3QgKVxyXG5cdH1cclxuXHJcbn0pIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXHJcbi5jb25maWcoZnVuY3Rpb24oICRyb3V0ZVByb3ZpZGVyKSB7XHJcblxyXG5cdCRyb3V0ZVByb3ZpZGVyXHJcblx0XHQud2hlbignLycsIHtcclxuXHRcdFx0Y29udHJvbGxlciBcdDogJ1Bvc3RDdHJsJyxcclxuXHRcdFx0dGVtcGxhdGVVcmwgOiAncG9zdHMuaHRtbCdcclxuXHRcdH0pXHJcblx0XHQud2hlbignL3JlZ2lzdGVyJywge1xyXG5cdFx0XHRjb250cm9sbGVyXHQ6ICdSZWdpc3RlckN0cmwnLFxyXG5cdFx0XHR0ZW1wbGF0ZVVybCA6ICdyZWdpc3Rlci5odG1sJ1xyXG5cdFx0fSlcclxuXHRcdC53aGVuKCcvbG9naW4nLCB7XHJcblx0XHRcdGNvbnRyb2xsZXJcdDogJ0xvZ2luQ3RybCcsXHJcblx0XHRcdHRlbXBsYXRlVXJsXHQ6ICdsb2dpbi5odG1sJ1xyXG5cdFx0fSlcclxuXHRcdFxyXG59KSIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG5cdC5zZXJ2aWNlKCdVc2VyU3ZjJywgZnVuY3Rpb24oICRodHRwICkge1xyXG5cdFx0dmFyIHN2YyA9IHRoaXM7XHJcblxyXG5cdFx0c3ZjLmdldFVzZXIgPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0cmV0dXJuICRodHRwLmdldCgnL2FwaS91c2VycycpXHJcblx0XHR9XHJcblxyXG5cdFx0c3ZjLmxvZ2luID0gZnVuY3Rpb24oIHVzZXJuYW1lLCBwYXNzd29yZCApIHtcclxuXHRcdFx0cmV0dXJuICRodHRwLnBvc3QoJy9hcGkvc2Vzc2lvbnMnLCB7XHJcblx0XHRcdFx0dXNlcm5hbWUgOiB1c2VybmFtZSxcclxuXHRcdFx0XHRwYXNzd29yZCA6IHBhc3N3b3JkXHJcblx0XHRcdH0pLnRoZW4oZnVuY3Rpb24oIHZhbCApIHtcclxuXHRcdFx0XHRzdmMudG9rZW4gPSB2YWwuZGF0YTtcclxuXHRcdFx0XHQkaHR0cC5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vblsnWC1BdXRoJ10gPSB2YWwuZGF0YTtcclxuXHRcdFx0XHRyZXR1cm4gc3ZjLmdldFVzZXIoKTtcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHJcblx0fSkiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuLnJ1bihmdW5jdGlvbigkcm9vdFNjb3BlLCR0aW1lb3V0KXtcclxuXHJcblx0KGZ1bmN0aW9uIGNvbm5lY3QoKXtcclxuXHRcdHZhciB1cmwgPSAnd3M6Ly9sb2NhbGhvc3Q6ODg4OCc7XHJcblx0XHR2YXIgY29ubmVjdGlvbiA9IG5ldyBXZWJTb2NrZXQodXJsKTtcclxuXHRcdGNvbm5lY3Rpb24ub25jbG9zZSA9IGZ1bmN0aW9uKGUpe1xyXG5cdFx0XHRjb25zb2xlLmxvZygnY29ubmVjdGlvbiBjbG9zZWQnKTtcclxuXHRcdFx0JHRpbWVvdXQoY29ubmVjdCwgMTAqMTAwMCk7XHJcblx0XHR9XHJcblxyXG5cdFx0Y29ubmVjdGlvbi5vbm1lc3NhZ2UgPSBmdW5jdGlvbiggZSApe1xyXG5cdFx0XHRjb25zb2xlLmxvZyggZSApO1xyXG5cclxuXHRcdFx0dmFyIHBheWxvYWQgPSBKU09OLnBhcnNlKCBlLmRhdGEgKTtcclxuXHRcdFx0JHJvb3RTY29wZS4kYnJvYWRjYXN0KCd3czonICsgcGF5bG9hZC50b3BpYywgcGF5bG9hZC5kYXRhICk7XHJcblxyXG5cdFx0fVxyXG5cdH0pKCk7XHJcblx0XHJcblx0XHJcblxyXG5cdC8vIGNvbm5lY3Rpb24ub25vcGVuID0gZnVuY3Rpb24oKXtcclxuXHQvLyBcdGNvbnNvbGUubG9nKCdXZWJTb2NrZXQgY29ubmVjdGVkJyk7XHJcblx0Ly8gfVxyXG5cclxuXHRcclxufSkiXX0=
